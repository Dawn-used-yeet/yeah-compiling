name: CI

on:
  push:
    branches: ['**']
    paths:
      - '**'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  CI_CHUNK_SIZE: 65

jobs:
  prepare:
    name: Prepare job
    runs-on: ubuntu-latest
    outputs:
      individualMatrix: ${{ steps.generate-matrices.outputs.individualMatrix }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Get number of modules
        run: |
          projects=(src/*/*)
          echo "NUM_INDIVIDUAL_MODULES=${#projects[@]}" >> $GITHUB_ENV

      - id: generate-matrices
        name: Create output matrices
        uses: actions/github-script@v7
        with:
          script: |
            const num = parseInt(process.env.NUM_INDIVIDUAL_MODULES || "0");
            const chunkSize = parseInt(process.env.CI_CHUNK_SIZE || "65");
            const chunks = Array.from({length: Math.ceil(num / chunkSize)}, (_, i) => i);
            core.setOutput("individualMatrix", JSON.stringify({ chunk: chunks }));

  build_individual:
    name: Build chunk ${{ matrix.chunk }}
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.individualMatrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build chunk ${{ matrix.chunk }}
        env:
          CI_CHUNK_NUM: ${{ matrix.chunk }}
        run: chmod +x ./gradlew && ./gradlew -p src assembleRelease

      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: "apks-chunk-${{ matrix.chunk }}"
          path: "**/*.apk"
          retention-days: 1
